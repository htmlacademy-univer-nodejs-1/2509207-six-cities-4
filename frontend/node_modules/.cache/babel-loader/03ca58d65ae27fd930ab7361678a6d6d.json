{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchUserStatus, loginUser, logoutUser } from '../action';\nimport { AuthorizationStatus, StoreSlice } from '../../const';\nconst initialState = {\n  authorizationStatus: AuthorizationStatus.Unknown,\n  user: ''\n};\nexport const userProcess = createSlice({\n  name: StoreSlice.UserProcess,\n  initialState,\n  reducers: {},\n\n  extraReducers(builder) {\n    builder.addCase(fetchUserStatus.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.authorizationStatus = AuthorizationStatus.Auth;\n    }).addCase(fetchUserStatus.rejected, state => {\n      state.user = '';\n      state.authorizationStatus = AuthorizationStatus.NoAuth;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.authorizationStatus = AuthorizationStatus.Auth;\n    }).addCase(logoutUser.fulfilled, state => {\n      state.user = '';\n      state.authorizationStatus = AuthorizationStatus.NoAuth;\n    });\n  }\n\n});","map":{"version":3,"names":["createSlice","fetchUserStatus","loginUser","logoutUser","AuthorizationStatus","StoreSlice","initialState","authorizationStatus","Unknown","user","userProcess","name","UserProcess","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","Auth","rejected","NoAuth"],"sources":["/Users/vovotata/nodejs/2509207-six-cities-4/frontend/src/store/user-process/user-process.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport type { UserProcess } from '../../types/state';\nimport { fetchUserStatus, loginUser, logoutUser } from '../action';\nimport { AuthorizationStatus, StoreSlice } from '../../const';\n\nconst initialState: UserProcess = {\n  authorizationStatus: AuthorizationStatus.Unknown,\n  user: ''\n};\n\nexport const userProcess = createSlice({\n  name: StoreSlice.UserProcess,\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder\n      .addCase(fetchUserStatus.fulfilled, (state, action) => {\n        state.user = action.payload;\n        state.authorizationStatus = AuthorizationStatus.Auth;\n      })\n      .addCase(fetchUserStatus.rejected, (state) => {\n        state.user = '';\n        state.authorizationStatus = AuthorizationStatus.NoAuth;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.user = action.payload;\n        state.authorizationStatus = AuthorizationStatus.Auth;\n      })\n      .addCase(logoutUser.fulfilled, (state) => {\n        state.user = '';\n        state.authorizationStatus = AuthorizationStatus.NoAuth;\n      });\n  }\n});\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,WAAvD;AACA,SAASC,mBAAT,EAA8BC,UAA9B,QAAgD,aAAhD;AAEA,MAAMC,YAAyB,GAAG;EAChCC,mBAAmB,EAAEH,mBAAmB,CAACI,OADT;EAEhCC,IAAI,EAAE;AAF0B,CAAlC;AAKA,OAAO,MAAMC,WAAW,GAAGV,WAAW,CAAC;EACrCW,IAAI,EAAEN,UAAU,CAACO,WADoB;EAErCN,YAFqC;EAGrCO,QAAQ,EAAE,EAH2B;;EAIrCC,aAAa,CAACC,OAAD,EAAU;IACrBA,OAAO,CACJC,OADH,CACWf,eAAe,CAACgB,SAD3B,EACsC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACrDD,KAAK,CAACT,IAAN,GAAaU,MAAM,CAACC,OAApB;MACAF,KAAK,CAACX,mBAAN,GAA4BH,mBAAmB,CAACiB,IAAhD;IACD,CAJH,EAKGL,OALH,CAKWf,eAAe,CAACqB,QAL3B,EAKsCJ,KAAD,IAAW;MAC5CA,KAAK,CAACT,IAAN,GAAa,EAAb;MACAS,KAAK,CAACX,mBAAN,GAA4BH,mBAAmB,CAACmB,MAAhD;IACD,CARH,EASGP,OATH,CASWd,SAAS,CAACe,SATrB,EASgC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC/CD,KAAK,CAACT,IAAN,GAAaU,MAAM,CAACC,OAApB;MACAF,KAAK,CAACX,mBAAN,GAA4BH,mBAAmB,CAACiB,IAAhD;IACD,CAZH,EAaGL,OAbH,CAaWb,UAAU,CAACc,SAbtB,EAakCC,KAAD,IAAW;MACxCA,KAAK,CAACT,IAAN,GAAa,EAAb;MACAS,KAAK,CAACX,mBAAN,GAA4BH,mBAAmB,CAACmB,MAAhD;IACD,CAhBH;EAiBD;;AAtBoC,CAAD,CAA/B"},"metadata":{},"sourceType":"module"}