{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { ApiRoute, AppRoute, HttpCode } from '../const';\nimport { Token } from '../utils';\nexport const Action = {\n  FETCH_OFFERS: 'offers/fetch',\n  FETCH_OFFER: 'offer/fetch',\n  POST_OFFER: 'offer/post-offer',\n  EDIT_OFFER: 'offer/edit-offer',\n  DELETE_OFFER: 'offer/delete-offer',\n  FETCH_FAVORITE_OFFERS: 'offers/fetch-favorite',\n  FETCH_PREMIUM_OFFERS: 'offers/fetch-premium',\n  FETCH_COMMENTS: 'offer/fetch-comments',\n  POST_COMMENT: 'offer/post-comment',\n  POST_FAVORITE: 'offer/post-favorite',\n  LOGIN_USER: 'user/login',\n  LOGOUT_USER: 'user/logout',\n  FETCH_USER_STATUS: 'user/fetch-status',\n  REGISTER_USER: 'user/register'\n};\nexport const fetchOffers = createAsyncThunk(Action.FETCH_OFFERS, async (_, _ref) => {\n  let {\n    extra\n  } = _ref;\n  const {\n    api\n  } = extra;\n  const {\n    data\n  } = await api.get(ApiRoute.Offers);\n  return data;\n});\nexport const fetchFavoriteOffers = createAsyncThunk(Action.FETCH_FAVORITE_OFFERS, async (_, _ref2) => {\n  let {\n    extra\n  } = _ref2;\n  const {\n    api\n  } = extra;\n  const {\n    data\n  } = await api.get(ApiRoute.Favorite);\n  return data;\n});\nexport const fetchOffer = createAsyncThunk(Action.FETCH_OFFER, async (id, _ref3) => {\n  let {\n    extra\n  } = _ref3;\n  const {\n    api,\n    history\n  } = extra;\n\n  try {\n    const {\n      data\n    } = await api.get(`${ApiRoute.Offers}/${id}`);\n    return data;\n  } catch (error) {\n    var _axiosError$response;\n\n    const axiosError = error;\n\n    if (((_axiosError$response = axiosError.response) === null || _axiosError$response === void 0 ? void 0 : _axiosError$response.status) === HttpCode.NotFound) {\n      history.push(AppRoute.NotFound);\n    }\n\n    return Promise.reject(error);\n  }\n});\nexport const postOffer = createAsyncThunk(Action.POST_OFFER, async (newOffer, _ref4) => {\n  let {\n    extra\n  } = _ref4;\n  const {\n    api,\n    history\n  } = extra;\n  const {\n    data\n  } = await api.post(ApiRoute.Offers, newOffer);\n  history.push(`${AppRoute.Property}/${data.id}`);\n});\nexport const editOffer = createAsyncThunk(Action.EDIT_OFFER, async (offer, _ref5) => {\n  let {\n    extra\n  } = _ref5;\n  const {\n    api,\n    history\n  } = extra;\n  const {\n    data\n  } = await api.patch(`${ApiRoute.Offers}/${offer.id}`, offer);\n  history.push(`${AppRoute.Property}/${data.id}`);\n});\nexport const deleteOffer = createAsyncThunk(Action.DELETE_OFFER, async (id, _ref6) => {\n  let {\n    extra\n  } = _ref6;\n  const {\n    api,\n    history\n  } = extra;\n  await api.delete(`${ApiRoute.Offers}/${id}`);\n  history.push(AppRoute.Root);\n});\nexport const fetchPremiumOffers = createAsyncThunk(Action.FETCH_PREMIUM_OFFERS, async (cityName, _ref7) => {\n  let {\n    extra\n  } = _ref7;\n  const {\n    api\n  } = extra;\n  const {\n    data\n  } = await api.get(`${ApiRoute.Premium}?city=${cityName}`);\n  return data;\n});\nexport const fetchComments = createAsyncThunk(Action.FETCH_COMMENTS, async (id, _ref8) => {\n  let {\n    extra\n  } = _ref8;\n  const {\n    api\n  } = extra;\n  const {\n    data\n  } = await api.get(`${ApiRoute.Comments}/${id}`);\n  return data;\n});\nexport const fetchUserStatus = createAsyncThunk(Action.FETCH_USER_STATUS, async (_, _ref9) => {\n  let {\n    extra\n  } = _ref9;\n  const {\n    api\n  } = extra;\n\n  try {\n    const {\n      data\n    } = await api.get(ApiRoute.Login);\n    return data.email;\n  } catch (error) {\n    var _axiosError$response2;\n\n    const axiosError = error;\n\n    if (((_axiosError$response2 = axiosError.response) === null || _axiosError$response2 === void 0 ? void 0 : _axiosError$response2.status) === HttpCode.NoAuth) {\n      Token.drop();\n    }\n\n    return Promise.reject(error);\n  }\n});\nexport const loginUser = createAsyncThunk(Action.LOGIN_USER, async (_ref10, _ref11) => {\n  let {\n    email,\n    password\n  } = _ref10;\n  let {\n    extra\n  } = _ref11;\n  const {\n    api,\n    history\n  } = extra;\n  const {\n    data\n  } = await api.post(ApiRoute.Login, {\n    email,\n    password\n  });\n  const {\n    token\n  } = data;\n  Token.save(token);\n  history.push(AppRoute.Root);\n  return email;\n});\nexport const logoutUser = createAsyncThunk(Action.LOGOUT_USER, async (_, _ref12) => {\n  let {\n    extra\n  } = _ref12;\n  const {\n    api\n  } = extra;\n  await api.delete(ApiRoute.Logout);\n  Token.drop();\n});\nexport const registerUser = createAsyncThunk(Action.REGISTER_USER, async (_ref13, _ref14) => {\n  let {\n    email,\n    password,\n    name,\n    avatar,\n    isPro\n  } = _ref13;\n  let {\n    extra\n  } = _ref14;\n  const {\n    api,\n    history\n  } = extra;\n  const {\n    data\n  } = await api.post(ApiRoute.Register, {\n    email,\n    password,\n    name,\n    isPro\n  });\n\n  if (avatar) {\n    const payload = new FormData();\n    payload.append('avatar', avatar);\n    await api.post(`/${data.id}${ApiRoute.Avatar}`, payload, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  history.push(AppRoute.Login);\n});\nexport const postComment = createAsyncThunk(Action.POST_COMMENT, async (_ref15, _ref16) => {\n  let {\n    id,\n    comment,\n    rating\n  } = _ref15;\n  let {\n    extra\n  } = _ref16;\n  const {\n    api\n  } = extra;\n  const {\n    data\n  } = await api.post(`${ApiRoute.Comments}/${id}`, {\n    comment,\n    rating\n  });\n  return data;\n});\nexport const postFavorite = createAsyncThunk(Action.POST_FAVORITE, async (_ref17, _ref18) => {\n  let {\n    id,\n    status\n  } = _ref17;\n  let {\n    extra\n  } = _ref18;\n  const {\n    api,\n    history\n  } = extra;\n\n  try {\n    const {\n      data\n    } = await api.post(`${ApiRoute.Favorite}/${id}/${status}`);\n    return data;\n  } catch (error) {\n    var _axiosError$response3;\n\n    const axiosError = error;\n\n    if (((_axiosError$response3 = axiosError.response) === null || _axiosError$response3 === void 0 ? void 0 : _axiosError$response3.status) === HttpCode.NoAuth) {\n      history.push(AppRoute.Login);\n    }\n\n    return Promise.reject(error);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","ApiRoute","AppRoute","HttpCode","Token","Action","FETCH_OFFERS","FETCH_OFFER","POST_OFFER","EDIT_OFFER","DELETE_OFFER","FETCH_FAVORITE_OFFERS","FETCH_PREMIUM_OFFERS","FETCH_COMMENTS","POST_COMMENT","POST_FAVORITE","LOGIN_USER","LOGOUT_USER","FETCH_USER_STATUS","REGISTER_USER","fetchOffers","_","extra","api","data","get","Offers","fetchFavoriteOffers","Favorite","fetchOffer","id","history","error","axiosError","response","status","NotFound","push","Promise","reject","postOffer","newOffer","post","Property","editOffer","offer","patch","deleteOffer","delete","Root","fetchPremiumOffers","cityName","Premium","fetchComments","Comments","fetchUserStatus","Login","email","NoAuth","drop","loginUser","password","token","save","logoutUser","Logout","registerUser","name","avatar","isPro","Register","payload","FormData","append","Avatar","headers","postComment","comment","rating","postFavorite"],"sources":["/Users/vovotata/nodejs/2509207-six-cities-4/frontend/src/store/action.ts"],"sourcesContent":["import type { History } from 'history';\nimport type { AxiosInstance, AxiosError } from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport type { UserAuth, User, Offer, Comment, CommentAuth, FavoriteAuth, UserRegister, NewOffer } from '../types/types';\nimport { ApiRoute, AppRoute, HttpCode } from '../const';\nimport { Token } from '../utils';\n\nimport CategoryDto from '../dto/category/category.dto';\n import OfferDto from '../dto/offer/offer.dto';\n import CommentDto from '../dto/comment/comment.dto';\n import UserWithTokenDto from '../dto/user/user-with-token.dto';\n import UserDto from '../dto/user/user.dto';\n import CreateUserWithIdDto from '../dto/user/create-user-with-id.dto';\n import UpdateOfferDto from '../dto/offer/update-offer.dto';\n import CreateOfferDto from '../dto/offer/create-offer.dto';\ntype Extra = {\n  api: AxiosInstance;\n  history: History;\n}\n\nexport const Action = {\n  FETCH_OFFERS: 'offers/fetch',\n  FETCH_OFFER: 'offer/fetch',\n  POST_OFFER: 'offer/post-offer',\n  EDIT_OFFER: 'offer/edit-offer',\n  DELETE_OFFER: 'offer/delete-offer',\n  FETCH_FAVORITE_OFFERS: 'offers/fetch-favorite',\n  FETCH_PREMIUM_OFFERS: 'offers/fetch-premium',\n  FETCH_COMMENTS: 'offer/fetch-comments',\n  POST_COMMENT: 'offer/post-comment',\n  POST_FAVORITE: 'offer/post-favorite',\n  LOGIN_USER: 'user/login',\n  LOGOUT_USER: 'user/logout',\n  FETCH_USER_STATUS: 'user/fetch-status',\n  REGISTER_USER: 'user/register'\n};\n\nexport const fetchOffers = createAsyncThunk<Offer[], undefined, { extra: Extra }>(\n  Action.FETCH_OFFERS,\n  async (_, { extra }) => {\n    const { api } = extra;\n    const { data } = await api.get<Offer[]>(ApiRoute.Offers);\n\n    return data;\n  });\n\nexport const fetchFavoriteOffers = createAsyncThunk<Offer[], undefined, { extra: Extra }>(\n  Action.FETCH_FAVORITE_OFFERS,\n  async (_, { extra }) => {\n    const { api } = extra;\n    const { data } = await api.get<Offer[]>(ApiRoute.Favorite);\n\n    return data;\n  });\n\nexport const fetchOffer = createAsyncThunk<Offer, Offer['id'], { extra: Extra }>(\n  Action.FETCH_OFFER,\n  async (id, { extra }) => {\n    const { api, history } = extra;\n\n    try {\n      const { data } = await api.get<Offer>(`${ApiRoute.Offers}/${id}`);\n\n      return data;\n    } catch (error) {\n      const axiosError = error as AxiosError;\n\n      if (axiosError.response?.status === HttpCode.NotFound) {\n        history.push(AppRoute.NotFound);\n      }\n\n      return Promise.reject(error);\n    }\n  });\n\nexport const postOffer = createAsyncThunk<void, NewOffer, { extra: Extra }>(\n  Action.POST_OFFER,\n  async (newOffer, { extra }) => {\n    const { api, history } = extra;\n    const { data } = await api.post<Offer>(ApiRoute.Offers, newOffer);\n    history.push(`${AppRoute.Property}/${data.id}`);\n  });\n\nexport const editOffer = createAsyncThunk<void, Offer, { extra: Extra }>(\n  Action.EDIT_OFFER,\n  async (offer, { extra }) => {\n    const { api, history } = extra;\n    const { data } = await api.patch<Offer>(`${ApiRoute.Offers}/${offer.id}`, offer);\n    history.push(`${AppRoute.Property}/${data.id}`);\n  });\n\nexport const deleteOffer = createAsyncThunk<void, string, { extra: Extra }>(\n  Action.DELETE_OFFER,\n  async (id, { extra }) => {\n    const { api, history } = extra;\n    await api.delete(`${ApiRoute.Offers}/${id}`);\n    history.push(AppRoute.Root);\n  });\n\nexport const fetchPremiumOffers = createAsyncThunk<Offer[], string, { extra: Extra }>(\n  Action.FETCH_PREMIUM_OFFERS,\n  async (cityName, { extra }) => {\n    const { api } = extra;\n    const { data } = await api.get<Offer[]>(`${ApiRoute.Premium}?city=${cityName}`);\n\n    return data;\n  });\n\nexport const fetchComments = createAsyncThunk<Comment[], Offer['id'], { extra: Extra }>(\n  Action.FETCH_COMMENTS,\n  async (id, { extra }) => {\n    const { api } = extra;\n    const { data } = await api.get<Comment[]>(`${ApiRoute.Comments}/${id}`);\n\n    return data;\n  });\n\nexport const fetchUserStatus = createAsyncThunk<UserAuth['email'], undefined, { extra: Extra }>(\n  Action.FETCH_USER_STATUS,\n  async (_, { extra }) => {\n    const { api } = extra;\n\n    try {\n      const { data } = await api.get<User>(ApiRoute.Login);\n\n      return data.email;\n    } catch (error) {\n      const axiosError = error as AxiosError;\n\n      if (axiosError.response?.status === HttpCode.NoAuth) {\n        Token.drop();\n      }\n\n      return Promise.reject(error);\n    }\n  });\n\nexport const loginUser = createAsyncThunk<UserAuth['email'], UserAuth, { extra: Extra }>(\n  Action.LOGIN_USER,\n  async ({ email, password }, { extra }) => {\n    const { api, history } = extra;\n    const { data } = await api.post<User & { token: string }>(ApiRoute.Login, { email, password });\n    const { token } = data;\n\n    Token.save(token);\n    history.push(AppRoute.Root);\n\n    return email;\n  });\n\nexport const logoutUser = createAsyncThunk<void, undefined, { extra: Extra }>(\n  Action.LOGOUT_USER,\n  async (_, { extra }) => {\n    const { api } = extra;\n    await api.delete(ApiRoute.Logout);\n\n    Token.drop();\n  });\n\nexport const registerUser = createAsyncThunk<void, UserRegister, { extra: Extra }>(\n  Action.REGISTER_USER,\n  async ({ email, password, name, avatar, isPro }, { extra }) => {\n    const { api, history } = extra;\n    const { data } = await api.post<{id: string }>(ApiRoute.Register, { email, password, name, isPro });\n    if (avatar) {\n      const payload = new FormData();\n      payload.append('avatar', avatar);\n      await api.post(`/${data.id}${ApiRoute.Avatar}`, payload, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n    }\n    history.push(AppRoute.Login);\n  });\n\n\nexport const postComment = createAsyncThunk<Comment[], CommentAuth, { extra: Extra }>(\n  Action.POST_COMMENT,\n  async ({ id, comment, rating }, { extra }) => {\n    const { api } = extra;\n    const { data } = await api.post<Comment[]>(`${ApiRoute.Comments}/${id}`, { comment, rating });\n\n    return data;\n  });\n\nexport const postFavorite = createAsyncThunk<Offer, FavoriteAuth, { extra: Extra }>(\n  Action.POST_FAVORITE,\n  async ({ id, status }, { extra }) => {\n    const { api, history } = extra;\n\n    try {\n      const { data } = await api.post<Offer>(`${ApiRoute.Favorite}/${id}/${status}`);\n\n      return data;\n    } catch (error) {\n      const axiosError = error as AxiosError;\n\n      if (axiosError.response?.status === HttpCode.NoAuth) {\n        history.push(AppRoute.Login);\n      }\n\n      return Promise.reject(error);\n    }\n  });\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}