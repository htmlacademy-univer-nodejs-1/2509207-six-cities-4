{"ast":null,"code":"import { AuthorizationStatus, StoreSlice } from '../../const';\nexport const getAuthorizationStatus = _ref => {\n  let {\n    [StoreSlice.UserProcess]: USER_PROCESS\n  } = _ref;\n  return USER_PROCESS.authorizationStatus;\n};\nexport const getIsAuthorized = _ref2 => {\n  let {\n    [StoreSlice.UserProcess]: USER_PROCESS\n  } = _ref2;\n  return USER_PROCESS.authorizationStatus === AuthorizationStatus.Auth;\n};\nexport const getUser = _ref3 => {\n  let {\n    [StoreSlice.UserProcess]: USER_PROCESS\n  } = _ref3;\n  return USER_PROCESS.user;\n};","map":{"version":3,"names":["AuthorizationStatus","StoreSlice","getAuthorizationStatus","UserProcess","USER_PROCESS","authorizationStatus","getIsAuthorized","Auth","getUser","user"],"sources":["/Users/vovotata/nodejs/2509207-six-cities-4/frontend/src/store/user-process/selectors.ts"],"sourcesContent":["import { AuthorizationStatus, StoreSlice } from '../../const';\nimport type { State } from '../../types/state';\nimport type { User } from '../../types/types';\n\nexport const getAuthorizationStatus = ({ [StoreSlice.UserProcess]: USER_PROCESS }: State): AuthorizationStatus => USER_PROCESS.authorizationStatus;\nexport const getIsAuthorized = ({ [StoreSlice.UserProcess]: USER_PROCESS }: State): boolean => USER_PROCESS.authorizationStatus === AuthorizationStatus.Auth;\nexport const getUser = ({ [StoreSlice.UserProcess]: USER_PROCESS }: State): User['email'] => USER_PROCESS.user;\n"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,UAA9B,QAAgD,aAAhD;AAIA,OAAO,MAAMC,sBAAsB,GAAG;EAAA,IAAC;IAAE,CAACD,UAAU,CAACE,WAAZ,GAA0BC;EAA5B,CAAD;EAAA,OAA4EA,YAAY,CAACC,mBAAzF;AAAA,CAA/B;AACP,OAAO,MAAMC,eAAe,GAAG;EAAA,IAAC;IAAE,CAACL,UAAU,CAACE,WAAZ,GAA0BC;EAA5B,CAAD;EAAA,OAAgEA,YAAY,CAACC,mBAAb,KAAqCL,mBAAmB,CAACO,IAAzH;AAAA,CAAxB;AACP,OAAO,MAAMC,OAAO,GAAG;EAAA,IAAC;IAAE,CAACP,UAAU,CAACE,WAAZ,GAA0BC;EAA5B,CAAD;EAAA,OAAsEA,YAAY,CAACK,IAAnF;AAAA,CAAhB"},"metadata":{},"sourceType":"module"}