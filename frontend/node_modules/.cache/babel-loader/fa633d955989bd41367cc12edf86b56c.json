{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { ApiRoute, AppRoute, HttpCode } from '../const';\nimport { Token } from '../utils';\nimport { adaptListOffersToClient, adaptLoginToClient } from '../utils/adapters/adaptersToClient';\nimport { adaptOfferToClient, adaptCommentsToClient } from '../utils/adapters/adaptersToClient';\nimport { adaptSignupToServer, adaptCreateOfferToServer, adaptEditOfferToServer, adaptCreateCommentToServer } from '../utils/adapters/adaptersToServer';\nexport const Action = {\n  FETCH_OFFERS: 'offers/fetch',\n  FETCH_OFFER: 'offer/fetch',\n  POST_OFFER: 'offers/post-offer',\n  EDIT_OFFER: 'offers/edit-offer',\n  DELETE_OFFER: 'offers/delete-offer',\n  FETCH_FAVORITE_OFFERS: 'offers/fetch-favorite',\n  FETCH_PREMIUM_OFFERS: 'offers/fetch-premium',\n  FETCH_COMMENTS: 'offer/fetch-comments',\n  POST_COMMENT: 'offer/post-comment',\n  POST_FAVORITE: 'offer/post-favorite',\n  LOGIN_USER: 'user/login',\n  LOGOUT_USER: 'user/logout',\n  FETCH_USER_STATUS: 'user/fetch-status',\n  REGISTER_USER: 'user/register'\n};\nexport const fetchOffers = createAsyncThunk(Action.FETCH_OFFERS, async (_, _ref) => {\n  let {\n    extra\n  } = _ref;\n  const {\n    api\n  } = extra;\n  const {\n    data\n  } = await api.get(ApiRoute.Offers);\n  return adaptListOffersToClient(data);\n});\nexport const fetchFavoriteOffers = createAsyncThunk(Action.FETCH_FAVORITE_OFFERS, async (_, _ref2) => {\n  let {\n    extra\n  } = _ref2;\n  const {\n    api\n  } = extra;\n  const {\n    data\n  } = await api.get(ApiRoute.Favorite);\n  return data;\n});\nexport const fetchOffer = createAsyncThunk(Action.FETCH_OFFER, async (id, _ref3) => {\n  let {\n    extra\n  } = _ref3;\n  const {\n    api,\n    history\n  } = extra;\n\n  try {\n    const {\n      data\n    } = await api.get(`${ApiRoute.Offers}/${id}`);\n    return adaptOfferToClient(data);\n  } catch (error) {\n    var _axiosError$response;\n\n    const axiosError = error;\n\n    if (((_axiosError$response = axiosError.response) === null || _axiosError$response === void 0 ? void 0 : _axiosError$response.status) === HttpCode.NotFound) {\n      history.push(AppRoute.NotFound);\n    }\n\n    return Promise.reject(error);\n  }\n});\nexport const postOffer = createAsyncThunk(Action.POST_OFFER, async (newOffer, _ref4) => {\n  let {\n    extra\n  } = _ref4;\n  const {\n    api,\n    history\n  } = extra;\n  const payload = adaptCreateOfferToServer(newOffer);\n  const {\n    data\n  } = await api.post(ApiRoute.Offers, payload);\n  history.push(`${AppRoute.Property}/${data.id}`);\n});\nexport const editOffer = createAsyncThunk(Action.EDIT_OFFER, async (offer, _ref5) => {\n  let {\n    extra\n  } = _ref5;\n  const {\n    api,\n    history\n  } = extra;\n  const payload = adaptEditOfferToServer(offer);\n  const {\n    data\n  } = await api.patch(`${ApiRoute.Offers}/${offer.id}`, payload);\n  history.push(`${AppRoute.Property}/${data.id}`);\n});\nexport const deleteOffer = createAsyncThunk(Action.DELETE_OFFER, async (id, _ref6) => {\n  let {\n    extra\n  } = _ref6;\n  const {\n    api,\n    history\n  } = extra;\n  await api.delete(`${ApiRoute.Offers}/${id}`);\n  history.push(AppRoute.Root);\n});\nexport const fetchPremiumOffers = createAsyncThunk(Action.FETCH_PREMIUM_OFFERS, async (cityName, _ref7) => {\n  let {\n    extra\n  } = _ref7;\n  const {\n    api\n  } = extra;\n  const {\n    data\n  } = await api.get(`${ApiRoute.Premium}?city=${cityName}`);\n  return data;\n});\nexport const fetchComments = createAsyncThunk(Action.FETCH_COMMENTS, async (id, _ref8) => {\n  let {\n    extra\n  } = _ref8;\n  const {\n    api\n  } = extra;\n  const {\n    data\n  } = await api.get(`offers/${id}${ApiRoute.Comments}`);\n  return adaptCommentsToClient(data);\n});\nexport const fetchUserStatus = createAsyncThunk(Action.FETCH_USER_STATUS, async (_, _ref9) => {\n  let {\n    extra\n  } = _ref9;\n  const {\n    api\n  } = extra;\n\n  try {\n    const {\n      data\n    } = await api.get(ApiRoute.Login);\n    return data.email;\n  } catch (error) {\n    var _axiosError$response2;\n\n    const axiosError = error;\n\n    if (((_axiosError$response2 = axiosError.response) === null || _axiosError$response2 === void 0 ? void 0 : _axiosError$response2.status) === HttpCode.NoAuth) {\n      Token.drop();\n    }\n\n    return Promise.reject(error);\n  }\n});\nexport const loginUser = createAsyncThunk(Action.LOGIN_USER, async (_ref10, _ref11) => {\n  let {\n    email,\n    password\n  } = _ref10;\n  let {\n    extra\n  } = _ref11;\n  const {\n    api,\n    history\n  } = extra;\n  const {\n    data\n  } = await api.post(ApiRoute.Login, {\n    email,\n    password\n  });\n  const {\n    user,\n    token\n  } = adaptLoginToClient(data);\n  Token.save(token);\n  history.push(AppRoute.Root);\n  return user.email;\n});\nexport const logoutUser = createAsyncThunk(Action.LOGOUT_USER, async () => {\n  Token.drop();\n});\nexport const registerUser = createAsyncThunk(Action.REGISTER_USER, async (_ref12, _ref13) => {\n  let {\n    email,\n    password,\n    name,\n    avatar,\n    isPro\n  } = _ref12;\n  let {\n    extra\n  } = _ref13;\n  const {\n    api,\n    history\n  } = extra;\n  const payload = adaptSignupToServer({\n    email,\n    password,\n    name,\n    isPro\n  });\n  const {\n    data\n  } = await api.post(ApiRoute.Register, payload);\n\n  if (avatar) {\n    const payloadAvatar = new FormData();\n    payloadAvatar.append('avatar', avatar);\n    await api.post(`users/${data.id}${ApiRoute.Avatar}`, payloadAvatar, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  history.push(AppRoute.Login);\n});\nexport const postComment = createAsyncThunk(Action.POST_COMMENT, async (_ref14, _ref15) => {\n  let {\n    id,\n    comment,\n    rating\n  } = _ref14;\n  let {\n    extra\n  } = _ref15;\n  const {\n    api\n  } = extra;\n  const payload = adaptCreateCommentToServer({\n    comment,\n    rating,\n    id\n  });\n  const {\n    data\n  } = await api.post(`${ApiRoute.Comments}`, payload);\n  return adaptCommentsToClient(data);\n});\nexport const postFavorite = createAsyncThunk(Action.POST_FAVORITE, async (_ref16, _ref17) => {\n  let {\n    id,\n    status\n  } = _ref16;\n  let {\n    extra\n  } = _ref17;\n  const {\n    api,\n    history\n  } = extra;\n\n  try {\n    const {\n      data\n    } = await api.post(`${ApiRoute.Favorite}/${id}/${status}`);\n    return data;\n  } catch (error) {\n    var _axiosError$response3;\n\n    const axiosError = error;\n\n    if (((_axiosError$response3 = axiosError.response) === null || _axiosError$response3 === void 0 ? void 0 : _axiosError$response3.status) === HttpCode.NoAuth) {\n      history.push(AppRoute.Login);\n    }\n\n    return Promise.reject(error);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","ApiRoute","AppRoute","HttpCode","Token","adaptListOffersToClient","adaptLoginToClient","adaptOfferToClient","adaptCommentsToClient","adaptSignupToServer","adaptCreateOfferToServer","adaptEditOfferToServer","adaptCreateCommentToServer","Action","FETCH_OFFERS","FETCH_OFFER","POST_OFFER","EDIT_OFFER","DELETE_OFFER","FETCH_FAVORITE_OFFERS","FETCH_PREMIUM_OFFERS","FETCH_COMMENTS","POST_COMMENT","POST_FAVORITE","LOGIN_USER","LOGOUT_USER","FETCH_USER_STATUS","REGISTER_USER","fetchOffers","_","extra","api","data","get","Offers","fetchFavoriteOffers","Favorite","fetchOffer","id","history","error","axiosError","response","status","NotFound","push","Promise","reject","postOffer","newOffer","payload","post","Property","editOffer","offer","patch","deleteOffer","delete","Root","fetchPremiumOffers","cityName","Premium","fetchComments","Comments","fetchUserStatus","Login","email","NoAuth","drop","loginUser","password","user","token","save","logoutUser","registerUser","name","avatar","isPro","Register","payloadAvatar","FormData","append","Avatar","headers","postComment","comment","rating","postFavorite"],"sources":["/Users/vovotata/nodejs/2509207-six-cities-4/frontend/src/store/action.ts"],"sourcesContent":["import type { History } from 'history';\nimport type { AxiosInstance, AxiosError } from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport type { UserAuth, Offer, Comment, CommentAuth, FavoriteAuth, UserRegister, NewOffer, ListOffer } from '../types/types';\nimport { ApiRoute, AppRoute, HttpCode } from '../const';\nimport { Token } from '../utils';\n\nimport UserWithTokenDto from '../dto/user/user-with-token.dto';\nimport { adaptListOffersToClient, adaptLoginToClient } from '../utils/adapters/adaptersToClient';\nimport { adaptOfferToClient, adaptCommentsToClient } from '../utils/adapters/adaptersToClient';\nimport { adaptSignupToServer, adaptCreateOfferToServer, adaptEditOfferToServer, adaptCreateCommentToServer } from '../utils/adapters/adaptersToServer';\nimport OfferDto from '../dto/offer/offer.dto';\nimport CommentDto from '../dto/comment/comment.dto';\nimport UserDto from '../dto/user/user.dto';\nimport { ListItemOfferDto } from '../dto/offer/list-offer.dto';\n\ntype Extra = {\n  api: AxiosInstance;\n  history: History;\n}\n\nexport const Action = {\n  FETCH_OFFERS: 'offers/fetch',\n  FETCH_OFFER: 'offer/fetch',\n  POST_OFFER: 'offers/post-offer',\n  EDIT_OFFER: 'offers/edit-offer',\n  DELETE_OFFER: 'offers/delete-offer',\n  FETCH_FAVORITE_OFFERS: 'offers/fetch-favorite',\n  FETCH_PREMIUM_OFFERS: 'offers/fetch-premium',\n  FETCH_COMMENTS: 'offer/fetch-comments',\n  POST_COMMENT: 'offer/post-comment',\n  POST_FAVORITE: 'offer/post-favorite',\n  LOGIN_USER: 'user/login',\n  LOGOUT_USER: 'user/logout',\n  FETCH_USER_STATUS: 'user/fetch-status',\n  REGISTER_USER: 'user/register'\n};\n\nexport const fetchOffers = createAsyncThunk<ListOffer[], undefined, { extra: Extra }>(\n  Action.FETCH_OFFERS,\n  async (_, { extra }) => {\n    const { api } = extra;\n    const { data } = await api.get<ListItemOfferDto[]>(ApiRoute.Offers);\n\n    return adaptListOffersToClient(data);\n  });\n\nexport const fetchFavoriteOffers = createAsyncThunk<Offer[], undefined, { extra: Extra }>(\n  Action.FETCH_FAVORITE_OFFERS,\n  async (_, { extra }) => {\n    const { api } = extra;\n    const { data } = await api.get<Offer[]>(ApiRoute.Favorite);\n\n    return data;\n  });\n\nexport const fetchOffer = createAsyncThunk<Offer, Offer['id'], { extra: Extra }>(\n  Action.FETCH_OFFER,\n  async (id, { extra }) => {\n    const { api, history } = extra;\n\n    try {\n      const { data } = await api.get<OfferDto>(`${ApiRoute.Offers}/${id}`);\n\n      return adaptOfferToClient(data);\n    } catch (error) {\n      const axiosError = error as AxiosError;\n\n      if (axiosError.response?.status === HttpCode.NotFound) {\n        history.push(AppRoute.NotFound);\n      }\n\n      return Promise.reject(error);\n    }\n  });\n\nexport const postOffer = createAsyncThunk<void, NewOffer, { extra: Extra }>(\n  Action.POST_OFFER,\n  async (newOffer, { extra }) => {\n    const { api, history } = extra;\n    const payload = adaptCreateOfferToServer(newOffer);\n    const { data } = await api.post<OfferDto>(ApiRoute.Offers, payload);\n    history.push(`${AppRoute.Property}/${data.id}`);\n  });\n\nexport const editOffer = createAsyncThunk<void, Offer, { extra: Extra }>(\n  Action.EDIT_OFFER,\n  async (offer, { extra }) => {\n    const { api, history } = extra;\n    const payload = adaptEditOfferToServer(offer);\n    const { data } = await api.patch<OfferDto>(`${ApiRoute.Offers}/${offer.id}`, payload);\n    history.push(`${AppRoute.Property}/${data.id}`);\n  });\n\nexport const deleteOffer = createAsyncThunk<void, string, { extra: Extra }>(\n  Action.DELETE_OFFER,\n  async (id, { extra }) => {\n    const { api, history } = extra;\n    await api.delete(`${ApiRoute.Offers}/${id}`);\n    history.push(AppRoute.Root);\n  });\n\nexport const fetchPremiumOffers = createAsyncThunk<ListOffer[], string, { extra: Extra }>(\n  Action.FETCH_PREMIUM_OFFERS,\n  async (cityName, { extra }) => {\n    const { api } = extra;\n    const { data } = await api.get<ListItemOfferDto[]>(`${ApiRoute.Premium}?city=${cityName}`);\n\n    return data;\n  });\n\nexport const fetchComments = createAsyncThunk<Comment[], Offer['id'], { extra: Extra }>(\n  Action.FETCH_COMMENTS,\n  async (id, { extra }) => {\n    const { api } = extra;\n    const { data } = await api.get<CommentDto[]>(`offers/${id}${ApiRoute.Comments}`);\n\n    return adaptCommentsToClient(data);\n  });\n\nexport const fetchUserStatus = createAsyncThunk<UserAuth['email'], undefined, { extra: Extra }>(\n  Action.FETCH_USER_STATUS,\n  async (_, { extra }) => {\n    const { api } = extra;\n\n    try {\n      const { data } = await api.get<UserDto>(ApiRoute.Login);\n\n      return data.email;\n    } catch (error) {\n      const axiosError = error as AxiosError;\n\n      if (axiosError.response?.status === HttpCode.NoAuth) {\n        Token.drop();\n      }\n\n      return Promise.reject(error);\n    }\n  });\n\nexport const loginUser = createAsyncThunk<UserAuth['email'], UserAuth, { extra: Extra }>(\n  Action.LOGIN_USER,\n  async ({ email, password }, { extra }) => {\n    const { api, history } = extra;\n    const { data } = await api.post<UserWithTokenDto>(ApiRoute.Login, { email, password });\n    const { user, token } = adaptLoginToClient(data);\n\n    Token.save(token);\n    history.push(AppRoute.Root);\n\n    return user.email;\n  });\n\nexport const logoutUser = createAsyncThunk<void, undefined, { extra: Extra }>(\n  Action.LOGOUT_USER,\n  async () => {\n\n    Token.drop();\n  });\n\nexport const registerUser = createAsyncThunk<void, UserRegister, { extra: Extra }>(\n  Action.REGISTER_USER,\n  async ({ email, password, name, avatar, isPro }, { extra }) => {\n    const { api, history } = extra;\n    const payload = adaptSignupToServer({ email, password, name, isPro });\n    const { data } = await api.post<{ id: string }>(ApiRoute.Register, payload);\n    if (avatar) {\n      const payloadAvatar = new FormData();\n      payloadAvatar.append('avatar', avatar);\n      await api.post(`users/${data.id}${ApiRoute.Avatar}`, payloadAvatar, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n    }\n    history.push(AppRoute.Login);\n  });\n\n\nexport const postComment = createAsyncThunk<Comment[], CommentAuth, { extra: Extra }>(\n  Action.POST_COMMENT,\n  async ({ id, comment, rating }, { extra }) => {\n    const { api } = extra;\n    const payload = adaptCreateCommentToServer({ comment, rating, id });\n    const { data } = await api.post<CommentDto[]>(`${ApiRoute.Comments}`, payload);\n\n    return adaptCommentsToClient(data);\n  });\n\nexport const postFavorite = createAsyncThunk<Offer, FavoriteAuth, { extra: Extra }>(\n  Action.POST_FAVORITE,\n  async ({ id, status }, { extra }) => {\n    const { api, history } = extra;\n\n    try {\n      const { data } = await api.post<Offer>(`${ApiRoute.Favorite}/${id}/${status}`);\n\n      return data;\n    } catch (error) {\n      const axiosError = error as AxiosError;\n\n      if (axiosError.response?.status === HttpCode.NoAuth) {\n        history.push(AppRoute.Login);\n      }\n\n      return Promise.reject(error);\n    }\n  });\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}