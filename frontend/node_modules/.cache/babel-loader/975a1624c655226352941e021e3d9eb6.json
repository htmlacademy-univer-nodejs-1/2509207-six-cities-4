{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport { Map, TileLayer } from 'leaflet';\nconst MapSettings = {\n  TILE_LAYER: 'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png',\n  ATTRIBUTION: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>'\n};\n\nconst useMap = (mapRef, city) => {\n  _s();\n\n  const [map, setMap] = useState(null);\n  const isRenderedRef = useRef(false);\n  useEffect(() => {\n    if (mapRef.current !== null && !isRenderedRef.current) {\n      const instance = new Map(mapRef.current, {\n        center: {\n          lat: city.location.latitude,\n          lng: city.location.longitude\n        }\n      });\n      const layer = new TileLayer(MapSettings.TILE_LAYER, {\n        attribution: MapSettings.ATTRIBUTION\n      });\n      instance.addLayer(layer);\n      setMap(instance);\n      isRenderedRef.current = true;\n    }\n  }, [mapRef, map, city]);\n  return map;\n};\n\n_s(useMap, \"ABu9tQwf43psTVyI2B0fPm/piwo=\");\n\nexport default useMap;","map":{"version":3,"names":["useEffect","useState","useRef","Map","TileLayer","MapSettings","TILE_LAYER","ATTRIBUTION","useMap","mapRef","city","map","setMap","isRenderedRef","current","instance","center","lat","location","latitude","lng","longitude","layer","attribution","addLayer"],"sources":["/Users/vovotata/nodejs/2509207-six-cities-4/frontend/src/hooks/useMap.ts"],"sourcesContent":["import { useEffect, useState, useRef, MutableRefObject } from 'react';\nimport { Map, TileLayer } from 'leaflet';\n\nimport type { City } from '../types/types';\n\nconst MapSettings = {\n  TILE_LAYER: 'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png',\n  ATTRIBUTION: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>'\n};\n\nconst useMap = (\n  mapRef: MutableRefObject<HTMLElement | null>,\n  city: City\n): Map | null => {\n  const [map, setMap] = useState<Map | null>(null);\n  const isRenderedRef = useRef<boolean>(false);\n\n  useEffect(() => {\n    if (mapRef.current !== null && !isRenderedRef.current) {\n      const instance = new Map(mapRef.current, {\n        center: {\n          lat: city.location.latitude,\n          lng: city.location.longitude,\n        }\n      });\n\n      const layer = new TileLayer(\n        MapSettings.TILE_LAYER,\n        {\n          attribution: MapSettings.ATTRIBUTION,\n        }\n      );\n\n      instance.addLayer(layer);\n\n      setMap(instance);\n      isRenderedRef.current = true;\n    }\n  }, [mapRef, map, city]);\n\n  return map;\n};\n\nexport default useMap;\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA8D,OAA9D;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,SAA/B;AAIA,MAAMC,WAAW,GAAG;EAClBC,UAAU,EAAE,0EADM;EAElBC,WAAW,EAAE;AAFK,CAApB;;AAKA,MAAMC,MAAM,GAAG,CACbC,MADa,EAEbC,IAFa,KAGE;EAAA;;EACf,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAa,IAAb,CAA9B;EACA,MAAMY,aAAa,GAAGX,MAAM,CAAU,KAAV,CAA5B;EAEAF,SAAS,CAAC,MAAM;IACd,IAAIS,MAAM,CAACK,OAAP,KAAmB,IAAnB,IAA2B,CAACD,aAAa,CAACC,OAA9C,EAAuD;MACrD,MAAMC,QAAQ,GAAG,IAAIZ,GAAJ,CAAQM,MAAM,CAACK,OAAf,EAAwB;QACvCE,MAAM,EAAE;UACNC,GAAG,EAAEP,IAAI,CAACQ,QAAL,CAAcC,QADb;UAENC,GAAG,EAAEV,IAAI,CAACQ,QAAL,CAAcG;QAFb;MAD+B,CAAxB,CAAjB;MAOA,MAAMC,KAAK,GAAG,IAAIlB,SAAJ,CACZC,WAAW,CAACC,UADA,EAEZ;QACEiB,WAAW,EAAElB,WAAW,CAACE;MAD3B,CAFY,CAAd;MAOAQ,QAAQ,CAACS,QAAT,CAAkBF,KAAlB;MAEAV,MAAM,CAACG,QAAD,CAAN;MACAF,aAAa,CAACC,OAAd,GAAwB,IAAxB;IACD;EACF,CArBQ,EAqBN,CAACL,MAAD,EAASE,GAAT,EAAcD,IAAd,CArBM,CAAT;EAuBA,OAAOC,GAAP;AACD,CA/BD;;GAAMH,M;;AAiCN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}