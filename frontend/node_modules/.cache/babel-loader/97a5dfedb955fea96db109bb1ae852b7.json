{"ast":null,"code":"var _jsxFileName = \"/Users/vovotata/nodejs/2509207-six-cities-4/frontend/src/components/offer-form/offer-form.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport Select from 'react-select';\nimport LocationPicker from '../location-picker/location-picker';\nimport { CITIES, CityLocation, GOODS, TYPES } from '../../const';\nimport { capitalize } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar FormFieldName;\n\n(function (FormFieldName) {\n  FormFieldName[\"title\"] = \"title\";\n  FormFieldName[\"description\"] = \"description\";\n  FormFieldName[\"cityName\"] = \"cityName\";\n  FormFieldName[\"previewImage\"] = \"previewImage\";\n  FormFieldName[\"isPremium\"] = \"isPremium\";\n  FormFieldName[\"type\"] = \"type\";\n  FormFieldName[\"bedrooms\"] = \"bedrooms\";\n  FormFieldName[\"maxAdults\"] = \"maxAdults\";\n  FormFieldName[\"price\"] = \"price\";\n  FormFieldName[\"good\"] = \"good-\";\n})(FormFieldName || (FormFieldName = {}));\n\nconst getGoods = entries => {\n  const chosenGoods = [];\n\n  for (const entry of entries) {\n    if (entry[0].startsWith(FormFieldName.good)) {\n      chosenGoods.push(entry[0].slice(5));\n    }\n  }\n\n  return chosenGoods;\n};\n\nconst getCity = cityName => {\n  const name = String(cityName);\n\n  if (cityName && CITIES.includes(name)) {\n    return {\n      name,\n      location: CityLocation[name]\n    };\n  }\n\n  return {\n    name: CITIES[0],\n    location: CityLocation[CITIES[0]]\n  };\n};\n\nconst OfferForm = _ref => {\n  _s();\n\n  let {\n    offer,\n    onSubmit\n  } = _ref;\n  const {\n    title,\n    description,\n    city,\n    previewImage,\n    isPremium,\n    type,\n    bedrooms,\n    maxAdults,\n    price,\n    goods: chosenGoods,\n    location\n  } = offer;\n  const [chosenLocation, setChosenLocation] = useState(location);\n  const [chosenCity, setChosenCity] = useState(city);\n\n  const handleCityChange = value => {\n    setChosenCity(getCity(value));\n    setChosenLocation(CityLocation[value]);\n  };\n\n  const handleLocationChange = useCallback(_ref2 => {\n    let {\n      lat,\n      lng\n    } = _ref2;\n    setChosenLocation({\n      latitude: lat,\n      longitude: lng\n    });\n  }, []);\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const formData = new FormData(form);\n    const data = { ...offer,\n      title: formData.get(FormFieldName.title),\n      description: formData.get(FormFieldName.description),\n      city: getCity(formData.get(FormFieldName.cityName)),\n      previewImage: formData.get(FormFieldName.previewImage),\n      isPremium: Boolean(formData.get(FormFieldName.isPremium)),\n      type: formData.get(FormFieldName.type),\n      bedrooms: Number(formData.get(FormFieldName.bedrooms)),\n      maxAdults: Number(formData.get(FormFieldName.maxAdults)),\n      price: Number(formData.get(FormFieldName.price)),\n      goods: getGoods(formData.entries()),\n      location: chosenLocation\n    };\n    onSubmit(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form offer-form\",\n    action: \"#\",\n    method: \"post\",\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"title-fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          className: \"title-fieldset__label\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__input title-fieldset__text-input\",\n          placeholder: \"Title\",\n          name: FormFieldName.title,\n          id: \"title\",\n          required: true,\n          defaultValue: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-fieldset__checkbox-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__input\",\n          type: \"checkbox\",\n          name: FormFieldName.isPremium,\n          id: \"isPremium\",\n          defaultChecked: isPremium\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"isPremium\",\n          className: \"title-fieldset__checkbox-label\",\n          children: \"Premium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        className: \"offer-form__label\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form__input offer-form__textarea\",\n        placeholder: \"Description\",\n        name: FormFieldName.description,\n        id: \"description\",\n        required: true,\n        defaultValue: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"previewImage\",\n        className: \"offer-form__label\",\n        children: \"Preview Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form__input offer-form__text-input\",\n        type: \"url\",\n        placeholder: \"Preview image\",\n        name: FormFieldName.previewImage,\n        id: \"previewImage\",\n        required: true,\n        defaultValue: previewImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"type-fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"type\",\n          className: \"type-fieldset__label\",\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          className: \"type-fieldset__select\",\n          classNamePrefix: \"react-select\",\n          name: FormFieldName.type,\n          id: \"type\",\n          defaultValue: {\n            value: type,\n            label: capitalize(type)\n          },\n          options: TYPES.map(typeItem => ({\n            value: typeItem,\n            label: capitalize(typeItem)\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          className: \"type-fieldset__label\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__input type-fieldset__number-input\",\n          type: \"number\",\n          placeholder: \"100\",\n          name: FormFieldName.price,\n          id: \"price\",\n          defaultValue: price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bedrooms\",\n          className: \"type-fieldset__label\",\n          children: \"Bedrooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__input type-fieldset__number-input\",\n          type: \"number\",\n          placeholder: \"1\",\n          name: FormFieldName.bedrooms,\n          id: \"bedrooms\",\n          required: true,\n          step: 1,\n          defaultValue: bedrooms\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"maxAdults\",\n          className: \"type-fieldset__label\",\n          children: \"Max adults\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form__input type-fieldset__number-input\",\n          type: \"number\",\n          placeholder: \"1\",\n          name: FormFieldName.maxAdults,\n          id: \"maxAdults\",\n          required: true,\n          step: 1,\n          defaultValue: maxAdults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"goods-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"goods-list__title\",\n        children: \"Goods\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"goods-list__list\",\n        children: GOODS.map(good => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"goods-list__item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: good,\n            name: `${FormFieldName.good}${good}`,\n            defaultChecked: chosenGoods.includes(good)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"goods-list__label\",\n            htmlFor: good,\n            children: good\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, good, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__input-wrapper location-picker\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cityName\",\n        className: \"location-picker__label\",\n        children: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"location-picker__select\",\n        classNamePrefix: \"react-select\",\n        name: FormFieldName.cityName,\n        id: \"cityName\",\n        defaultValue: {\n          value: city.name,\n          label: city.name\n        },\n        options: CITIES.map(cityItem => ({\n          value: cityItem,\n          label: cityItem\n        })),\n        onChange: evt => {\n          if (evt) {\n            handleCityChange(evt.value);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LocationPicker, {\n      city: chosenCity,\n      onChange: handleLocationChange,\n      location: chosenLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"form__submit button\",\n      type: \"submit\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OfferForm, \"rdl6ZKAJppbVZ851+92yWUXvlMs=\");\n\n_c = OfferForm;\nexport default OfferForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OfferForm\");","map":{"version":3,"names":["useCallback","useState","Select","LocationPicker","CITIES","CityLocation","GOODS","TYPES","capitalize","FormFieldName","getGoods","entries","chosenGoods","entry","startsWith","good","push","slice","getCity","cityName","name","String","includes","location","OfferForm","offer","onSubmit","title","description","city","previewImage","isPremium","type","bedrooms","maxAdults","price","goods","chosenLocation","setChosenLocation","chosenCity","setChosenCity","handleCityChange","value","handleLocationChange","lat","lng","latitude","longitude","handleFormSubmit","e","preventDefault","form","currentTarget","formData","FormData","data","get","Boolean","Number","label","map","typeItem","cityItem","evt"],"sources":["/Users/vovotata/nodejs/2509207-six-cities-4/frontend/src/components/offer-form/offer-form.tsx"],"sourcesContent":["import { FormEvent, useCallback, useState } from 'react';\nimport Select from 'react-select';\n\nimport { City, NewOffer, Offer } from '../../types/types';\n\nimport LocationPicker from '../location-picker/location-picker';\nimport { CITIES, CityLocation, GOODS, TYPES } from '../../const';\nimport { capitalize } from '../../utils';\n\nenum FormFieldName {\n  title = 'title',\n  description = 'description',\n  cityName = 'cityName',\n  previewImage = 'previewImage',\n  isPremium = 'isPremium',\n  type = 'type',\n  bedrooms = 'bedrooms',\n  maxAdults = 'maxAdults',\n  price = 'price',\n  good = 'good-',\n}\n\nconst getGoods = (\n  entries: IterableIterator<[string, FormDataEntryValue]>\n): string[] => {\n  const chosenGoods: string[] = [];\n  for (const entry of entries) {\n    if (entry[0].startsWith(FormFieldName.good)) {\n      chosenGoods.push(entry[0].slice(5));\n    }\n  }\n  return chosenGoods;\n};\n\nconst getCity = (cityName: FormDataEntryValue | null): City => {\n  const name = String(cityName);\n  if (cityName && CITIES.includes(name)) {\n    return {\n      name,\n      location: CityLocation[name],\n    };\n  }\n\n  return { name: CITIES[0], location: CityLocation[CITIES[0]] };\n};\n\ntype OfferFormProps<T> = {\n  offer: T;\n  onSubmit: (offerData: T) => void;\n};\n\nconst OfferForm = <T extends Offer | NewOffer>({\n  offer,\n  onSubmit,\n}: OfferFormProps<T>): JSX.Element => {\n  const {\n    title,\n    description,\n    city,\n    previewImage,\n    isPremium,\n    type,\n    bedrooms,\n    maxAdults,\n    price,\n    goods: chosenGoods,\n    location,\n  } = offer;\n  const [chosenLocation, setChosenLocation] = useState(location);\n  const [chosenCity, setChosenCity] = useState(city);\n\n  const handleCityChange = (value: keyof typeof CityLocation) => {\n    setChosenCity(getCity(value));\n    setChosenLocation(CityLocation[value]);\n  };\n\n  const handleLocationChange = useCallback(\n    ({ lat, lng }: { lat: number; lng: number }) => {\n      setChosenLocation({ latitude: lat, longitude: lng });\n    },\n    []\n  );\n\n  const handleFormSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const formData = new FormData(form);\n    const data = {\n      ...offer,\n      title: formData.get(FormFieldName.title),\n      description: formData.get(FormFieldName.description),\n      city: getCity(formData.get(FormFieldName.cityName)),\n      previewImage: formData.get(FormFieldName.previewImage),\n      isPremium: Boolean(formData.get(FormFieldName.isPremium)),\n      type: formData.get(FormFieldName.type),\n      bedrooms: Number(formData.get(FormFieldName.bedrooms)),\n      maxAdults: Number(formData.get(FormFieldName.maxAdults)),\n      price: Number(formData.get(FormFieldName.price)),\n      goods: getGoods(formData.entries()),\n      location: chosenLocation,\n    };\n\n    onSubmit(data);\n  };\n\n  return (\n    <form\n      className=\"form offer-form\"\n      action=\"#\"\n      method=\"post\"\n      onSubmit={handleFormSubmit}\n    >\n      <fieldset className=\"title-fieldset\">\n        <div className=\"form__input-wrapper\">\n          <label htmlFor=\"title\" className=\"title-fieldset__label\">\n            Title\n          </label>\n          <input\n            className=\"form__input title-fieldset__text-input\"\n            placeholder=\"Title\"\n            name={FormFieldName.title}\n            id=\"title\"\n            required\n            defaultValue={title}\n          />\n        </div>\n        <div className=\"title-fieldset__checkbox-wrapper\">\n          <input\n            className=\"form__input\"\n            type=\"checkbox\"\n            name={FormFieldName.isPremium}\n            id=\"isPremium\"\n            defaultChecked={isPremium}\n          />\n          <label htmlFor=\"isPremium\" className=\"title-fieldset__checkbox-label\">\n            Premium\n          </label>\n        </div>\n      </fieldset>\n      <div className=\"form__input-wrapper\">\n        <label htmlFor=\"description\" className=\"offer-form__label\">\n          Description\n        </label>\n        <textarea\n          className=\"form__input offer-form__textarea\"\n          placeholder=\"Description\"\n          name={FormFieldName.description}\n          id=\"description\"\n          required\n          defaultValue={description}\n        />\n      </div>\n      <div className=\"form__input-wrapper\">\n        <label htmlFor=\"previewImage\" className=\"offer-form__label\">\n          Preview Image\n        </label>\n        <input\n          className=\"form__input offer-form__text-input\"\n          type=\"url\"\n          placeholder=\"Preview image\"\n          name={FormFieldName.previewImage}\n          id=\"previewImage\"\n          required\n          defaultValue={previewImage}\n        />\n      </div>\n      <fieldset className=\"type-fieldset\">\n        <div className=\"form__input-wrapper\">\n          <label htmlFor=\"type\" className=\"type-fieldset__label\">\n            Type\n          </label>\n          <Select\n            className=\"type-fieldset__select\"\n            classNamePrefix=\"react-select\"\n            name={FormFieldName.type}\n            id=\"type\"\n            defaultValue={{ value: type, label: capitalize(type) }}\n            options={TYPES.map((typeItem) => ({\n              value: typeItem,\n              label: capitalize(typeItem),\n            }))}\n          />\n        </div>\n        <div className=\"form__input-wrapper\">\n          <label htmlFor=\"price\" className=\"type-fieldset__label\">\n            Price\n          </label>\n          <input\n            className=\"form__input type-fieldset__number-input\"\n            type=\"number\"\n            placeholder=\"100\"\n            name={FormFieldName.price}\n            id=\"price\"\n            defaultValue={price}\n          />\n        </div>\n        <div className=\"form__input-wrapper\">\n          <label htmlFor=\"bedrooms\" className=\"type-fieldset__label\">\n            Bedrooms\n          </label>\n          <input\n            className=\"form__input type-fieldset__number-input\"\n            type=\"number\"\n            placeholder=\"1\"\n            name={FormFieldName.bedrooms}\n            id=\"bedrooms\"\n            required\n            step={1}\n            defaultValue={bedrooms}\n          />\n        </div>\n        <div className=\"form__input-wrapper\">\n          <label htmlFor=\"maxAdults\" className=\"type-fieldset__label\">\n            Max adults\n          </label>\n          <input\n            className=\"form__input type-fieldset__number-input\"\n            type=\"number\"\n            placeholder=\"1\"\n            name={FormFieldName.maxAdults}\n            id=\"maxAdults\"\n            required\n            step={1}\n            defaultValue={maxAdults}\n          />\n        </div>\n      </fieldset>\n      <fieldset className=\"goods-list\">\n        <h2 className=\"goods-list__title\">Goods</h2>\n        <ul className=\"goods-list__list\">\n          {GOODS.map((good) => (\n            <li key={good} className=\"goods-list__item\">\n              <input\n                type=\"checkbox\"\n                id={good}\n                name={`${FormFieldName.good}${good}`}\n                defaultChecked={chosenGoods.includes(good)}\n              />\n              <label className=\"goods-list__label\" htmlFor={good}>\n                {good}\n              </label>\n            </li>\n          ))}\n        </ul>\n      </fieldset>\n      <div className=\"form__input-wrapper location-picker\">\n        <label htmlFor=\"cityName\" className=\"location-picker__label\">\n          Location\n        </label>\n        <Select\n          className=\"location-picker__select\"\n          classNamePrefix=\"react-select\"\n          name={FormFieldName.cityName}\n          id=\"cityName\"\n          defaultValue={{ value: city.name, label: city.name }}\n          options={CITIES.map((cityItem) => ({\n            value: cityItem,\n            label: cityItem,\n          }))}\n          onChange={(evt) => {\n            if (evt) {\n              handleCityChange(evt.value);\n            }\n          }}\n        />\n      </div>\n      <LocationPicker\n        city={chosenCity}\n        onChange={handleLocationChange}\n        location={chosenLocation}\n      />\n      <button className=\"form__submit button\" type=\"submit\">\n        Save\n      </button>\n    </form>\n  );\n};\n\nexport default OfferForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}