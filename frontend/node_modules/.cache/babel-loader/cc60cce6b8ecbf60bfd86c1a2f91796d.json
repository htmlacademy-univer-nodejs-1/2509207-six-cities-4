{"ast":null,"code":"import { UserType } from '../../dto/user/user.dto';\nexport const adaptSignupToServer = user => ({\n  name: user.name,\n  email: user.email,\n  password: user.password,\n  type: user.isPro ? UserType.pro : UserType.обычный\n});\nexport const adaptCreateOfferToServer = offer => ({\n  title: offer.title,\n  description: offer.description,\n  city: offer.city.name,\n  previewImage: offer.previewImage,\n  isPremium: offer.isPremium,\n  type: offer.type,\n  roomCount: offer.bedrooms,\n  guestCount: offer.maxAdults,\n  price: offer.price,\n  amenities: offer.goods.map(g => g),\n  coordinates: offer.location\n});\nexport const adaptEditOfferToServer = offer => ({\n  title: offer.title,\n  description: offer.description,\n  city: offer.city.name,\n  previewImage: offer.previewImage,\n  isPremium: offer.isPremium,\n  type: offer.type,\n  roomCount: offer.bedrooms,\n  guestCount: offer.maxAdults,\n  price: offer.price,\n  amenities: offer.goods.map(g => g),\n  coordinates: offer.location // если UpdateOfferDto помечает поля optional, можно присылать только изменённые\n\n});\nexport const adaptCreateCommentToServer = comment => ({\n  text: comment.comment,\n  rating: comment.rating,\n  offerId: comment.id\n});\nexport const adaptAvatarToServer = file => {\n  const formData = new FormData();\n  formData.append('avatar', file);\n  return formData;\n};\nexport const adaptImageToServer = file => {\n  const formData = new FormData();\n  formData.append('image', file);\n  return formData;\n};","map":{"version":3,"names":["UserType","adaptSignupToServer","user","name","email","password","type","isPro","pro","обычный","adaptCreateOfferToServer","offer","title","description","city","previewImage","isPremium","roomCount","bedrooms","guestCount","maxAdults","price","amenities","goods","map","g","coordinates","location","adaptEditOfferToServer","adaptCreateCommentToServer","comment","text","rating","offerId","id","adaptAvatarToServer","file","formData","FormData","append","adaptImageToServer"],"sources":["/Users/vovotata/nodejs/2509207-six-cities-4/frontend/src/utils/adapters/adaptersToServer.ts"],"sourcesContent":["import CreateUserDto from '../../dto/user/create-user.dto';\nimport UpdateOfferDto from '../../dto/offer/update-offer.dto';\nimport CreateOfferDto from '../../dto/offer/create-offer.dto';\nimport CreateCommentDto from '../../dto/comment/create-comment.dto';\nimport { UserRegister, NewOffer, CommentAuth, Offer } from '../../types/types';\nimport { UserType } from '../../dto/user/user.dto';\nimport { City as CityEnum, HousingType, Amenity } from '../../dto/offer/offer.dto';\n\n\nexport const adaptSignupToServer = (user: UserRegister): CreateUserDto => ({\n    name: user.name,\n    email: user.email,\n    password: user.password,\n    type: user.isPro ? UserType.pro : UserType.обычный,\n});\n\nexport const adaptCreateOfferToServer = (offer: NewOffer): CreateOfferDto => ({\n    title: offer.title,\n    description: offer.description,\n    city: offer.city.name as CityEnum,\n    previewImage: offer.previewImage,\n    isPremium: offer.isPremium,\n    type: offer.type as HousingType,\n    roomCount: offer.bedrooms,\n    guestCount: offer.maxAdults,\n    price: offer.price,\n    amenities: offer.goods.map(g => g as Amenity),\n    coordinates: offer.location,\n});\n\nexport const adaptEditOfferToServer = (offer: Offer): UpdateOfferDto => ({\n    title: offer.title,\n    description: offer.description,\n    city: offer.city.name as CityEnum,\n    previewImage: offer.previewImage,\n    isPremium: offer.isPremium,\n    type: offer.type as HousingType,\n    roomCount: offer.bedrooms,\n    guestCount: offer.maxAdults,\n    price: offer.price,\n    amenities: offer.goods.map(g => g as Amenity),\n    coordinates: offer.location,\n    // если UpdateOfferDto помечает поля optional, можно присылать только изменённые\n});\n\nexport const adaptCreateCommentToServer = (comment: CommentAuth): CreateCommentDto => ({\n    text: comment.comment,\n    rating: comment.rating,\n    offerId: comment.id,\n  });\n\n  export const adaptAvatarToServer = (file: File): FormData => {\n    const formData = new FormData();\n    formData.append('avatar', file);\n    return formData;\n  };\n\n  export const adaptImageToServer = (file: File): FormData => {\n    const formData = new FormData();\n    formData.append('image', file);\n    return formData;\n  };"],"mappings":"AAKA,SAASA,QAAT,QAAyB,yBAAzB;AAIA,OAAO,MAAMC,mBAAmB,GAAIC,IAAD,KAAwC;EACvEC,IAAI,EAAED,IAAI,CAACC,IAD4D;EAEvEC,KAAK,EAAEF,IAAI,CAACE,KAF2D;EAGvEC,QAAQ,EAAEH,IAAI,CAACG,QAHwD;EAIvEC,IAAI,EAAEJ,IAAI,CAACK,KAAL,GAAaP,QAAQ,CAACQ,GAAtB,GAA4BR,QAAQ,CAACS;AAJ4B,CAAxC,CAA5B;AAOP,OAAO,MAAMC,wBAAwB,GAAIC,KAAD,KAAsC;EAC1EC,KAAK,EAAED,KAAK,CAACC,KAD6D;EAE1EC,WAAW,EAAEF,KAAK,CAACE,WAFuD;EAG1EC,IAAI,EAAEH,KAAK,CAACG,IAAN,CAAWX,IAHyD;EAI1EY,YAAY,EAAEJ,KAAK,CAACI,YAJsD;EAK1EC,SAAS,EAAEL,KAAK,CAACK,SALyD;EAM1EV,IAAI,EAAEK,KAAK,CAACL,IAN8D;EAO1EW,SAAS,EAAEN,KAAK,CAACO,QAPyD;EAQ1EC,UAAU,EAAER,KAAK,CAACS,SARwD;EAS1EC,KAAK,EAAEV,KAAK,CAACU,KAT6D;EAU1EC,SAAS,EAAEX,KAAK,CAACY,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,IAAIA,CAArB,CAV+D;EAW1EC,WAAW,EAAEf,KAAK,CAACgB;AAXuD,CAAtC,CAAjC;AAcP,OAAO,MAAMC,sBAAsB,GAAIjB,KAAD,KAAmC;EACrEC,KAAK,EAAED,KAAK,CAACC,KADwD;EAErEC,WAAW,EAAEF,KAAK,CAACE,WAFkD;EAGrEC,IAAI,EAAEH,KAAK,CAACG,IAAN,CAAWX,IAHoD;EAIrEY,YAAY,EAAEJ,KAAK,CAACI,YAJiD;EAKrEC,SAAS,EAAEL,KAAK,CAACK,SALoD;EAMrEV,IAAI,EAAEK,KAAK,CAACL,IANyD;EAOrEW,SAAS,EAAEN,KAAK,CAACO,QAPoD;EAQrEC,UAAU,EAAER,KAAK,CAACS,SARmD;EASrEC,KAAK,EAAEV,KAAK,CAACU,KATwD;EAUrEC,SAAS,EAAEX,KAAK,CAACY,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,IAAIA,CAArB,CAV0D;EAWrEC,WAAW,EAAEf,KAAK,CAACgB,QAXkD,CAYrE;;AAZqE,CAAnC,CAA/B;AAeP,OAAO,MAAME,0BAA0B,GAAIC,OAAD,KAA6C;EACnFC,IAAI,EAAED,OAAO,CAACA,OADqE;EAEnFE,MAAM,EAAEF,OAAO,CAACE,MAFmE;EAGnFC,OAAO,EAAEH,OAAO,CAACI;AAHkE,CAA7C,CAAnC;AAML,OAAO,MAAMC,mBAAmB,GAAIC,IAAD,IAA0B;EAC3D,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;EACAD,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BH,IAA1B;EACA,OAAOC,QAAP;AACD,CAJM;AAMP,OAAO,MAAMG,kBAAkB,GAAIJ,IAAD,IAA0B;EAC1D,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;EACAD,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,IAAzB;EACA,OAAOC,QAAP;AACD,CAJM"},"metadata":{},"sourceType":"module"}