{"ast":null,"code":"import { createSelector } from '@reduxjs/toolkit';\nimport { Comparator, MAX_COMMENTS, StoreSlice } from '../../const';\nimport { getCity, getSorting } from '../site-process/selectors';\nexport const getIsOffersLoading = _ref => {\n  let {\n    [StoreSlice.SiteData]: SITE_DATA\n  } = _ref;\n  return SITE_DATA.isOffersLoading;\n};\nexport const getOffers = _ref2 => {\n  let {\n    [StoreSlice.SiteData]: SITE_DATA\n  } = _ref2;\n  return SITE_DATA.offers;\n};\nexport const getIsFavoriteOffersLoading = _ref3 => {\n  let {\n    [StoreSlice.SiteData]: SITE_DATA\n  } = _ref3;\n  return SITE_DATA.isFavoriteOffersLoading;\n};\nexport const getFavoriteOffers = _ref4 => {\n  let {\n    [StoreSlice.SiteData]: SITE_DATA\n  } = _ref4;\n  return SITE_DATA.favoriteOffers;\n};\nexport const getIsOfferLoading = _ref5 => {\n  let {\n    [StoreSlice.SiteData]: SITE_DATA\n  } = _ref5;\n  return SITE_DATA.isOfferLoading;\n};\nexport const getOffer = _ref6 => {\n  let {\n    [StoreSlice.SiteData]: SITE_DATA\n  } = _ref6;\n  return SITE_DATA.offer;\n};\nexport const getPremiumOffers = _ref7 => {\n  let {\n    [StoreSlice.SiteData]: SITE_DATA\n  } = _ref7;\n  return SITE_DATA.premiumOffers;\n};\nexport const getComments = _ref8 => {\n  let {\n    [StoreSlice.SiteData]: SITE_DATA\n  } = _ref8;\n  return SITE_DATA.comments;\n};\nexport const getCommentStatus = _ref9 => {\n  let {\n    [StoreSlice.SiteData]: SITE_DATA\n  } = _ref9;\n  return SITE_DATA.commentStatus;\n};\nexport const selectOffers = createSelector([getOffers, getCity, getSorting], (offers, city, sorting) => offers.filter(offer => offer.city.name === city.name).sort(Comparator[sorting]));\nexport const selectComments = createSelector([getComments], comments => [...comments].sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()).slice(0, MAX_COMMENTS));","map":{"version":3,"names":["createSelector","Comparator","MAX_COMMENTS","StoreSlice","getCity","getSorting","getIsOffersLoading","SiteData","SITE_DATA","isOffersLoading","getOffers","offers","getIsFavoriteOffersLoading","isFavoriteOffersLoading","getFavoriteOffers","favoriteOffers","getIsOfferLoading","isOfferLoading","getOffer","offer","getPremiumOffers","premiumOffers","getComments","comments","getCommentStatus","commentStatus","selectOffers","city","sorting","filter","name","sort","selectComments","a","b","Date","date","getTime","slice"],"sources":["/Users/vovotata/nodejs/2509207-six-cities-4/frontend/src/store/site-data/selectors.ts"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nimport type { State } from '../../types/state';\nimport type { ListOffer, Comment } from '../../types/types';\nimport { Comparator, MAX_COMMENTS, StoreSlice, SubmitStatus } from '../../const';\nimport { getCity, getSorting } from '../site-process/selectors';\n\nexport const getIsOffersLoading = ({ [StoreSlice.SiteData]: SITE_DATA }: State): boolean => SITE_DATA.isOffersLoading;\nexport const getOffers = ({ [StoreSlice.SiteData]: SITE_DATA}: State): ListOffer[] => SITE_DATA.offers;\n\nexport const getIsFavoriteOffersLoading = ({ [StoreSlice.SiteData]: SITE_DATA }: State): boolean => SITE_DATA.isFavoriteOffersLoading;\nexport const getFavoriteOffers = ({ [StoreSlice.SiteData]: SITE_DATA}: State): Offer[] => SITE_DATA.favoriteOffers;\n\nexport const getIsOfferLoading = ({ [StoreSlice.SiteData]: SITE_DATA }: State): boolean => SITE_DATA.isOfferLoading;\nexport const getOffer = ({ [StoreSlice.SiteData]: SITE_DATA }: State): Offer | null => SITE_DATA.offer;\n\nexport const getPremiumOffers = ({ [StoreSlice.SiteData]: SITE_DATA }: State): Offer[] => SITE_DATA.premiumOffers;\nexport const getComments = ({ [StoreSlice.SiteData]: SITE_DATA }: State): Comment[] => SITE_DATA.comments;\nexport const getCommentStatus = ({ [StoreSlice.SiteData]: SITE_DATA }: State): SubmitStatus => SITE_DATA.commentStatus;\n\nexport const selectOffers = createSelector(\n  [getOffers, getCity, getSorting],\n  (offers, city, sorting) => offers.filter((offer) => offer.city.name === city.name).sort(Comparator[sorting])\n);\n\nexport const selectComments = createSelector(\n  [getComments],\n  (comments) => [...comments].sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()).slice(0, MAX_COMMENTS)\n);\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AAIA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,UAAnC,QAAmE,aAAnE;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,2BAApC;AAEA,OAAO,MAAMC,kBAAkB,GAAG;EAAA,IAAC;IAAE,CAACH,UAAU,CAACI,QAAZ,GAAuBC;EAAzB,CAAD;EAAA,OAA0DA,SAAS,CAACC,eAApE;AAAA,CAA3B;AACP,OAAO,MAAMC,SAAS,GAAG;EAAA,IAAC;IAAE,CAACP,UAAU,CAACI,QAAZ,GAAuBC;EAAzB,CAAD;EAAA,OAA6DA,SAAS,CAACG,MAAvE;AAAA,CAAlB;AAEP,OAAO,MAAMC,0BAA0B,GAAG;EAAA,IAAC;IAAE,CAACT,UAAU,CAACI,QAAZ,GAAuBC;EAAzB,CAAD;EAAA,OAA0DA,SAAS,CAACK,uBAApE;AAAA,CAAnC;AACP,OAAO,MAAMC,iBAAiB,GAAG;EAAA,IAAC;IAAE,CAACX,UAAU,CAACI,QAAZ,GAAuBC;EAAzB,CAAD;EAAA,OAAyDA,SAAS,CAACO,cAAnE;AAAA,CAA1B;AAEP,OAAO,MAAMC,iBAAiB,GAAG;EAAA,IAAC;IAAE,CAACb,UAAU,CAACI,QAAZ,GAAuBC;EAAzB,CAAD;EAAA,OAA0DA,SAAS,CAACS,cAApE;AAAA,CAA1B;AACP,OAAO,MAAMC,QAAQ,GAAG;EAAA,IAAC;IAAE,CAACf,UAAU,CAACI,QAAZ,GAAuBC;EAAzB,CAAD;EAAA,OAA+DA,SAAS,CAACW,KAAzE;AAAA,CAAjB;AAEP,OAAO,MAAMC,gBAAgB,GAAG;EAAA,IAAC;IAAE,CAACjB,UAAU,CAACI,QAAZ,GAAuBC;EAAzB,CAAD;EAAA,OAA0DA,SAAS,CAACa,aAApE;AAAA,CAAzB;AACP,OAAO,MAAMC,WAAW,GAAG;EAAA,IAAC;IAAE,CAACnB,UAAU,CAACI,QAAZ,GAAuBC;EAAzB,CAAD;EAAA,OAA4DA,SAAS,CAACe,QAAtE;AAAA,CAApB;AACP,OAAO,MAAMC,gBAAgB,GAAG;EAAA,IAAC;IAAE,CAACrB,UAAU,CAACI,QAAZ,GAAuBC;EAAzB,CAAD;EAAA,OAA+DA,SAAS,CAACiB,aAAzE;AAAA,CAAzB;AAEP,OAAO,MAAMC,YAAY,GAAG1B,cAAc,CACxC,CAACU,SAAD,EAAYN,OAAZ,EAAqBC,UAArB,CADwC,EAExC,CAACM,MAAD,EAASgB,IAAT,EAAeC,OAAf,KAA2BjB,MAAM,CAACkB,MAAP,CAAeV,KAAD,IAAWA,KAAK,CAACQ,IAAN,CAAWG,IAAX,KAAoBH,IAAI,CAACG,IAAlD,EAAwDC,IAAxD,CAA6D9B,UAAU,CAAC2B,OAAD,CAAvE,CAFa,CAAnC;AAKP,OAAO,MAAMI,cAAc,GAAGhC,cAAc,CAC1C,CAACsB,WAAD,CAD0C,EAEzCC,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcQ,IAAd,CAAmB,CAACE,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASD,CAAC,CAACE,IAAX,EAAiBC,OAAjB,KAA6B,IAAIF,IAAJ,CAASF,CAAC,CAACG,IAAX,EAAiBC,OAAjB,EAA1D,EAAsFC,KAAtF,CAA4F,CAA5F,EAA+FpC,YAA/F,CAF4B,CAArC"},"metadata":{},"sourceType":"module"}