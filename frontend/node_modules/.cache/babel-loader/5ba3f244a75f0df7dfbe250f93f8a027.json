{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { StoreSlice, SubmitStatus } from '../../const';\nimport { fetchOffers, fetchOffer, fetchPremiumOffers, fetchComments, postComment, postFavorite, fetchFavoriteOffers } from '../action';\nconst initialState = {\n  offers: [],\n  isOffersLoading: false,\n  offer: null,\n  isOfferLoading: false,\n  favoriteOffers: [],\n  isFavoriteOffersLoading: false,\n  premiumOffers: [],\n  comments: [],\n  commentStatus: SubmitStatus.Still\n};\nexport const siteData = createSlice({\n  name: StoreSlice.SiteData,\n  initialState,\n  reducers: {},\n\n  extraReducers(builder) {\n    builder.addCase(fetchOffers.pending, state => {\n      state.isOffersLoading = true;\n    }).addCase(fetchOffers.fulfilled, (state, action) => {\n      state.offers = action.payload;\n      state.isOffersLoading = false;\n    }).addCase(fetchOffers.rejected, state => {\n      state.isOffersLoading = false;\n    }).addCase(fetchFavoriteOffers.pending, state => {\n      state.isFavoriteOffersLoading = true;\n    }).addCase(fetchFavoriteOffers.fulfilled, (state, action) => {\n      state.favoriteOffers = action.payload;\n      state.isFavoriteOffersLoading = false;\n    }).addCase(fetchFavoriteOffers.rejected, state => {\n      state.isFavoriteOffersLoading = false;\n    }).addCase(fetchOffer.pending, state => {\n      state.isOfferLoading = true;\n    }).addCase(fetchOffer.fulfilled, (state, action) => {\n      state.offer = action.payload;\n      state.isOfferLoading = false;\n    }).addCase(fetchOffer.rejected, state => {\n      state.isOfferLoading = false;\n    }).addCase(fetchPremiumOffers.fulfilled, (state, action) => {\n      state.premiumOffers = action.payload;\n    }).addCase(fetchComments.fulfilled, (state, action) => {\n      state.comments = action.payload;\n    }).addCase(postComment.pending, state => {\n      state.commentStatus = SubmitStatus.Pending;\n    }).addCase(postComment.fulfilled, (state, action) => {\n      state.comments = action.payload;\n      state.commentStatus = SubmitStatus.Fullfilled;\n    }).addCase(postComment.rejected, state => {\n      state.commentStatus = SubmitStatus.Rejected;\n    }).addCase(postFavorite.fulfilled, (state, action) => {\n      const updatedOffer = action.payload;\n      state.offers = state.offers.map(offer => offer.id === updatedOffer.id ? updatedOffer : offer);\n\n      if (state.offer && state.offer.id === updatedOffer.id) {\n        state.offer = updatedOffer;\n      }\n\n      if (updatedOffer.isFavorite) {\n        state.favoriteOffers = state.favoriteOffers.concat(updatedOffer);\n      } else {\n        state.favoriteOffers = state.favoriteOffers.filter(favoriteOffer => favoriteOffer.id !== updatedOffer.id);\n      }\n    });\n  }\n\n});","map":{"version":3,"names":["createSlice","StoreSlice","SubmitStatus","fetchOffers","fetchOffer","fetchPremiumOffers","fetchComments","postComment","postFavorite","fetchFavoriteOffers","initialState","offers","isOffersLoading","offer","isOfferLoading","favoriteOffers","isFavoriteOffersLoading","premiumOffers","comments","commentStatus","Still","siteData","name","SiteData","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","Pending","Fullfilled","Rejected","updatedOffer","map","id","isFavorite","concat","filter","favoriteOffer"],"sources":["/Users/vovotata/nodejs/2509207-six-cities-4/frontend/src/store/site-data/site-data.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport type { SiteData } from '../../types/state';\nimport { StoreSlice, SubmitStatus } from '../../const';\nimport { fetchOffers, fetchOffer, fetchPremiumOffers, fetchComments, postComment, postFavorite, fetchFavoriteOffers } from '../action';\n\nconst initialState: SiteData = {\n  offers: [],\n  isOffersLoading: false,\n  offer: null,\n  isOfferLoading: false,\n  favoriteOffers: [],\n  isFavoriteOffersLoading: false,\n  premiumOffers: [],\n  comments: [],\n  commentStatus: SubmitStatus.Still,\n};\n\nexport const siteData = createSlice({\n  name: StoreSlice.SiteData,\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder\n      .addCase(fetchOffers.pending, (state) => {\n        state.isOffersLoading = true;\n      })\n      .addCase(fetchOffers.fulfilled, (state, action) => {\n        state.offers = action.payload;\n        state.isOffersLoading = false;\n      })\n      .addCase(fetchOffers.rejected, (state) => {\n        state.isOffersLoading = false;\n      })\n      .addCase(fetchFavoriteOffers.pending, (state) => {\n        state.isFavoriteOffersLoading = true;\n      })\n      .addCase(fetchFavoriteOffers.fulfilled, (state, action) => {\n        state.favoriteOffers = action.payload;\n        state.isFavoriteOffersLoading = false;\n      })\n      .addCase(fetchFavoriteOffers.rejected, (state) => {\n        state.isFavoriteOffersLoading = false;\n      })\n      .addCase(fetchOffer.pending, (state) => {\n        state.isOfferLoading = true;\n      })\n      .addCase(fetchOffer.fulfilled, (state, action) => {\n        state.offer = action.payload;\n        state.isOfferLoading = false;\n      })\n      .addCase(fetchOffer.rejected, (state) => {\n        state.isOfferLoading = false;\n      })\n      .addCase(fetchPremiumOffers.fulfilled, (state, action) => {\n        state.premiumOffers = action.payload;\n      })\n      .addCase(fetchComments.fulfilled, (state, action) => {\n        state.comments = action.payload;\n      })\n      .addCase(postComment.pending, (state) => {\n        state.commentStatus = SubmitStatus.Pending;\n      })\n      .addCase(postComment.fulfilled, (state, action) => {\n        state.comments = action.payload;\n        state.commentStatus = SubmitStatus.Fullfilled;\n      })\n      .addCase(postComment.rejected, (state) => {\n        state.commentStatus = SubmitStatus.Rejected;\n      })\n      .addCase(postFavorite.fulfilled, (state, action) => {\n        const updatedOffer = action.payload;\n        state.offers = state.offers.map((offer) => offer.id === updatedOffer.id ? updatedOffer : offer);\n\n        if (state.offer && state.offer.id === updatedOffer.id) {\n          state.offer = updatedOffer;\n        }\n\n        if (updatedOffer.isFavorite) {\n          state.favoriteOffers = state.favoriteOffers.concat(updatedOffer);\n        } else {\n          state.favoriteOffers = state.favoriteOffers.filter((favoriteOffer) => favoriteOffer.id !== updatedOffer.id);\n        }\n      });\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}