{"ast":null,"code":"var _jsxFileName = \"/Users/vovotata/nodejs/2509207-six-cities-4/frontend/src/components/map/map.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\nimport { Icon, Marker } from 'leaflet';\nimport useMap from '../../hooks/useMap';\nimport { CityLocation, URL_MARKER_CURRENT, URL_MARKER_DEFAULT, ZOOM } from '../../const';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCustomIcon = new Icon({\n  iconUrl: URL_MARKER_DEFAULT,\n  iconSize: [40, 40],\n  iconAnchor: [20, 40]\n});\nconst currentCustomIcon = new Icon({\n  iconUrl: URL_MARKER_CURRENT,\n  iconSize: [40, 40],\n  iconAnchor: [20, 40]\n});\n\nconst Map = _ref => {\n  _s();\n\n  let {\n    city,\n    locations,\n    activeOffer,\n    place = 'cities'\n  } = _ref;\n  const mapRef = useRef(null);\n  const map = useMap(mapRef, city);\n  useEffect(() => {\n    const markers = [];\n\n    if (map) {\n      locations.forEach(_ref2 => {\n        let {\n          id,\n          latitude: lat,\n          longitude: lng\n        } = _ref2;\n        const marker = new Marker({\n          lat,\n          lng\n        });\n        marker.setIcon(activeOffer === id ? currentCustomIcon : defaultCustomIcon).addTo(map);\n        markers.push(marker);\n      });\n      const {\n        latitude: lat,\n        longitude: lng\n      } = CityLocation[city.name];\n      map.setView({\n        lat,\n        lng\n      }, ZOOM);\n    }\n\n    return () => {\n      if (map) {\n        markers.forEach(marker => {\n          map.removeLayer(marker);\n        });\n      }\n    };\n  }, [map, city, locations, activeOffer]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `${place}__map map`,\n    ref: mapRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Map, \"5vFIHA1c6X7IDKKBLe6xFlu/6wA=\", false, function () {\n  return [useMap];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["useRef","useEffect","Icon","Marker","useMap","CityLocation","URL_MARKER_CURRENT","URL_MARKER_DEFAULT","ZOOM","defaultCustomIcon","iconUrl","iconSize","iconAnchor","currentCustomIcon","Map","city","locations","activeOffer","place","mapRef","map","markers","forEach","id","latitude","lat","longitude","lng","marker","setIcon","addTo","push","name","setView","removeLayer"],"sources":["/Users/vovotata/nodejs/2509207-six-cities-4/frontend/src/components/map/map.tsx"],"sourcesContent":["import { useRef, useEffect } from 'react';\nimport { Icon, Marker } from 'leaflet';\n\nimport type { City, Location } from '../../types/types';\n\nimport useMap from '../../hooks/useMap';\nimport {\n  CityLocation,\n  URL_MARKER_CURRENT,\n  URL_MARKER_DEFAULT,\n  ZOOM\n} from '../../const';\n\nimport 'leaflet/dist/leaflet.css';\n\ntype MapProps = {\n  city: City;\n  locations: (Location & { id?: string })[];\n  activeOffer?: null | string;\n  place?: 'cities' | 'property' | 'form';\n};\n\nconst defaultCustomIcon = new Icon({\n  iconUrl: URL_MARKER_DEFAULT,\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n});\n\nconst currentCustomIcon = new Icon({\n  iconUrl: URL_MARKER_CURRENT,\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n});\n\nconst Map = ({\n  city,\n  locations,\n  activeOffer,\n  place = 'cities',\n}: MapProps): JSX.Element => {\n  const mapRef = useRef(null);\n  const map = useMap(mapRef, city);\n\n  useEffect(() => {\n    const markers: Marker[] = [];\n\n    if (map) {\n      locations.forEach(({ id, latitude: lat, longitude: lng }) => {\n        const marker = new Marker({\n          lat,\n          lng,\n        });\n\n        marker\n          .setIcon(activeOffer === id ? currentCustomIcon : defaultCustomIcon)\n          .addTo(map);\n\n        markers.push(marker);\n      });\n\n      const { latitude: lat, longitude: lng } = CityLocation[city.name];\n      map.setView({ lat, lng }, ZOOM);\n    }\n\n    return () => {\n      if (map) {\n        markers.forEach((marker) => {\n          map.removeLayer(marker);\n        });\n      }\n    };\n  }, [map, city, locations, activeOffer]);\n\n  return <section className={`${place}__map map`} ref={mapRef} />;\n};\n\nexport default Map;\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,SAA7B;AAIA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SACEC,YADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,IAJF,QAKO,aALP;AAOA,OAAO,0BAAP;;AASA,MAAMC,iBAAiB,GAAG,IAAIP,IAAJ,CAAS;EACjCQ,OAAO,EAAEH,kBADwB;EAEjCI,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAFuB;EAGjCC,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL;AAHqB,CAAT,CAA1B;AAMA,MAAMC,iBAAiB,GAAG,IAAIX,IAAJ,CAAS;EACjCQ,OAAO,EAAEJ,kBADwB;EAEjCK,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAFuB;EAGjCC,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL;AAHqB,CAAT,CAA1B;;AAMA,MAAME,GAAG,GAAG,QAKiB;EAAA;;EAAA,IALhB;IACXC,IADW;IAEXC,SAFW;IAGXC,WAHW;IAIXC,KAAK,GAAG;EAJG,CAKgB;EAC3B,MAAMC,MAAM,GAAGnB,MAAM,CAAC,IAAD,CAArB;EACA,MAAMoB,GAAG,GAAGhB,MAAM,CAACe,MAAD,EAASJ,IAAT,CAAlB;EAEAd,SAAS,CAAC,MAAM;IACd,MAAMoB,OAAiB,GAAG,EAA1B;;IAEA,IAAID,GAAJ,EAAS;MACPJ,SAAS,CAACM,OAAV,CAAkB,SAA2C;QAAA,IAA1C;UAAEC,EAAF;UAAMC,QAAQ,EAAEC,GAAhB;UAAqBC,SAAS,EAAEC;QAAhC,CAA0C;QAC3D,MAAMC,MAAM,GAAG,IAAIzB,MAAJ,CAAW;UACxBsB,GADwB;UAExBE;QAFwB,CAAX,CAAf;QAKAC,MAAM,CACHC,OADH,CACWZ,WAAW,KAAKM,EAAhB,GAAqBV,iBAArB,GAAyCJ,iBADpD,EAEGqB,KAFH,CAESV,GAFT;QAIAC,OAAO,CAACU,IAAR,CAAaH,MAAb;MACD,CAXD;MAaA,MAAM;QAAEJ,QAAQ,EAAEC,GAAZ;QAAiBC,SAAS,EAAEC;MAA5B,IAAoCtB,YAAY,CAACU,IAAI,CAACiB,IAAN,CAAtD;MACAZ,GAAG,CAACa,OAAJ,CAAY;QAAER,GAAF;QAAOE;MAAP,CAAZ,EAA0BnB,IAA1B;IACD;;IAED,OAAO,MAAM;MACX,IAAIY,GAAJ,EAAS;QACPC,OAAO,CAACC,OAAR,CAAiBM,MAAD,IAAY;UAC1BR,GAAG,CAACc,WAAJ,CAAgBN,MAAhB;QACD,CAFD;MAGD;IACF,CAND;EAOD,CA5BQ,EA4BN,CAACR,GAAD,EAAML,IAAN,EAAYC,SAAZ,EAAuBC,WAAvB,CA5BM,CAAT;EA8BA,oBAAO;IAAS,SAAS,EAAG,GAAEC,KAAM,WAA7B;IAAyC,GAAG,EAAEC;EAA9C;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAxCD;;GAAML,G;UAOQV,M;;;KAPRU,G;AA0CN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}